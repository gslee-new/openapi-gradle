plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '6.5.0'
}

group = 'gslee'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // springdoc-openapi webmvc-ui 설정
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    //openapi generator 설정
    implementation ('org.openapitools:openapi-generator:6.5.0') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
	implementation ("org.openapitools:openapi-generator-gradle-plugin:6.5.0") {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

//    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
//    implementation 'javax.validation:validation-api:2.0.1.Final'
//    implementation 'javax.annotation:javax.annotation-api:1.3.2'
//    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'build/generated-sources/java']
        }
    }
}

//openApiGenerator task 설정
openApiGenerate {
//    verbose.set(true)
    generatorName.set("spring")
    library.set("spring-boot")
    inputSpec.set(project.file("$rootDir/src/main/resources/petstore.yaml").absolutePath)
//	outputDir.set(project.file("$rootDir/src/main/").absolutePath)
    outputDir.set(project.file("$buildDir/generated-sources").absolutePath)
    apiPackage.set("glsee.oas.openapi.rest")
    modelPackage.set("glsee.oas.openapi.domain")
    configOptions.set(
            [
                    interfaceOnly: "true",
                    useBeanValidation: "true",
                    performBeanValidation: "true",
                    serializableModel: "true",
                    useSpringBoot3 : "true",
                    openApiNullable: "false",
                    useTags        : "true",
                    interfaceOnly  : "true",
                    sourceFolder: "/java",
                    implFolder: "/java",
            ]
    )
}


tasks.named('test') {
    useJUnitPlatform()
}
